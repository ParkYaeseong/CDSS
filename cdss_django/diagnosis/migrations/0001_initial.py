# Generated by Django 5.2.2 on 2025-06-11 07:17

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('patients', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='DiagnosisRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('input_data_reference', models.CharField(help_text='SOPInstanceUID of the primary DICOM instance in Orthanc', max_length=255, verbose_name='Input Data Reference (SOPInstanceUID)')),
                ('scan_type', models.CharField(blank=True, default='pancreas_ct', max_length=100, verbose_name='Scan Type')),
                ('status', models.CharField(choices=[('PENDING', 'Pending'), ('PROCESSING', 'Processing'), ('COMPLETED', 'Completed'), ('FAILED', 'Failed')], db_index=True, default='PENDING', max_length=20, verbose_name='Status')),
                ('celery_task_id', models.CharField(blank=True, db_index=True, max_length=255, null=True, verbose_name='Celery Task ID')),
                ('request_timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Request Time')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='ct_diagnosis_requests', to='patients.patientprofile', verbose_name='Patient')),
                ('requester', models.ForeignKey(limit_choices_to={'is_staff': True}, on_delete=django.db.models.deletion.PROTECT, related_name='ct_diagnosis_requests', to=settings.AUTH_USER_MODEL, verbose_name='Requesting Clinician')),
            ],
            options={
                'verbose_name': 'CT Diagnosis Request',
                'verbose_name_plural': 'CT Diagnosis Requests',
                'ordering': ['-request_timestamp'],
            },
        ),
        migrations.CreateModel(
            name='DiagnosisResult',
            fields=[
                ('request', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='result', serialize=False, to='diagnosis.diagnosisrequest', verbose_name='CT Diagnosis Request')),
                ('classification_probability', models.FloatField(blank=True, null=True, verbose_name='Classification Probability')),
                ('classification_prediction', models.IntegerField(blank=True, null=True, verbose_name='Classification Prediction')),
                ('segmentation_metrics', models.JSONField(blank=True, null=True, verbose_name='Segmentation Metrics')),
                ('input_image_slice_plot', models.CharField(blank=True, max_length=512, verbose_name='Input Slice Plot Path')),
                ('segmentation_map_plot', models.CharField(blank=True, max_length=512, verbose_name='Segmentation Plot Path')),
                ('pdf_report_path', models.CharField(blank=True, max_length=512, verbose_name='PDF Report Path')),
                ('gemini_interpretation', models.TextField(blank=True, verbose_name='Gemini Interpretation')),
                ('result_summary', models.CharField(blank=True, max_length=100, verbose_name='Result Summary')),
                ('error_message', models.TextField(blank=True, verbose_name='Error Message')),
                ('completion_timestamp', models.DateTimeField(blank=True, null=True, verbose_name='Completion Time')),
                ('visualization_3d_html_path', models.CharField(blank=True, max_length=512, null=True, verbose_name='3D Visualization HTML Path')),
            ],
            options={
                'verbose_name': 'CT Diagnosis Result',
                'verbose_name_plural': 'CT Diagnosis Results',
            },
        ),
    ]
